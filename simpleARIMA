#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed May  8 19:08:13 2019

@author: ewong586
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from pandas import datetime
from statsmodels.tsa.arima_model import ARIMA
from sklearn.metrics import mean_squared_error

from pandas.tools.plotting import autocorrelation_plot

def parser(x):
	return datetime.strptime(''+x, '%m/%d/%y')
#uploading CSV files
store = pd.read_csv('store_a.csv', dtype= {'Store': int, 'Promo2': int})
a_train = pd.read_csv('train_a.csv',parse_dates=[0],  date_parser=parser, squeeze=True,
        usecols=["Date", "Sales"] )
test = pd.read_csv('test_a.csv', dtype= {'Store': int, 'DayOfWeek': int})

#merge store info for training set
#b_train=pd.merge(a_train, store, on='Store')
#
#
#train= b_train[b_train['Store'] == 1]
#
#train['Date'] =pd.to_datetime(train.Date)
#train.sort_values(by='Date')

week_train= a_train.groupby(pd.Grouper(freq='W', key = 'Date')).agg({"Sales":'sum'})

X_nd = week_train.values
X = X_nd.ravel()
#
#from sklearn.model_selection import train_test_split
#X_train, X_test= train_test_split(X, test_size= 0.2, shuffle=False)

size = int(len(X) * 0.75)
X_train, X_test = X[0:size], X[size:len(X)]

history = [x for x in X_train]
predictions = list()
for t in range(len(X_test)):
	model = ARIMA(history, order=(5,1,0))
	model_fit = model.fit(disp=0)
	output = model_fit.forecast()
	yhat = output[0]
	predictions.append(yhat)
	obs = X_test[t]
	history.append(obs)
	print('predicted=%f, expected=%f' % (yhat, obs))
error = mean_squared_error(X_test, predictions)
print('Test MSE: %.3f' % error)
# plot
plt.xlabel("Time(weeks)")
plt.title("Predictive Results")
plt.ylabel("Sales")
plt.plot(X_test)
plt.plot(predictions, color='red')
plt.show()

##plt.plot(week_train.index, week_train['Sales'])